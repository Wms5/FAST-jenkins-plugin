/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'java-library'
    id 'maven-publish'
    id 'com.github.m-tanigt.jtdog' version '1.1.0'
}

repositories {
    mavenLocal()
    maven {
        url = uri('https://repo.jenkins-ci.org/public/')
    }

    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
}

dependencies {
    api 'org.jenkins-ci.plugins:structs:324.va_f5d6774f3a_d'
    api 'br.ufba.jnose:jnose-core:0.8.1'
    testImplementation 'org.jenkins-ci.main:jenkins-war:2.361'
    testImplementation 'org.jenkins-ci.main:jenkins-test-harness:1903.vf505ecb_63589'
    testImplementation 'org.jenkins-ci:test-annotations:1.4'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.1'
    testImplementation 'org.junit.vintage:junit-vintage-engine:5.9.1'
    testImplementation 'org.jenkins-ci.plugins.workflow:workflow-cps:3536.vb_8a_6628079d5'
    testImplementation 'org.jenkins-ci.plugins.workflow:workflow-job:1.13'
    testImplementation 'org.jenkins-ci.plugins.workflow:workflow-basic-steps:994.vd57e3ca_46d24'
    testImplementation 'org.jenkins-ci.plugins.workflow:workflow-durable-task-step:1217.v38306d8fa_b_5c'
    testImplementation 'org.jenkins-ci.main:jenkins-war:2.361.4'
    testImplementation 'org.jenkins-ci.main:jenkins-test-harness:1903.vf505ecb_63589'
    testImplementation 'org.jenkins-ci:test-annotations:1.4'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.1'
    testImplementation 'org.junit.vintage:junit-vintage-engine:5.9.1'
    compileOnly 'org.jenkins-ci.main:jenkins-core:2.361'
    compileOnly 'javax.servlet:javax.servlet-api:3.1.0'
    compileOnly 'commons-logging:commons-logging:1.2'
    compileOnly 'org.jenkins-ci.main:jenkins-core:2.361.4'
    compileOnly 'javax.servlet:javax.servlet-api:3.1.0'
    compileOnly 'commons-logging:commons-logging:1.2'

}

group = 'io.jenkins.plugins'
version = '1.0-SNAPSHOT'
description = 'TODO Plugin'
java.sourceCompatibility = JavaVersion.VERSION_1_8

configurations.all {
    exclude(group: 'javax.servlet', module: 'servlet-api')
    exclude(group: 'org.sonatype.sisu', module: 'sisu-guice')
    exclude(group: 'log4j', module: 'log4j')
    exclude(group: 'log4j', module: 'log4j')
    exclude(group: 'commons-logging', module: 'commons-logging')
    exclude(group: 'commons-logging', module: 'commons-logging')
    exclude(group: 'org.apache.logging.log4j')
    exclude(group: 'org.testng', module: 'testng')
}

tasks.register('testsJar', Jar) {
    archiveClassifier = 'tests'
    from(sourceSets.test.output)
}

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
            artifact(testsJar)
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Javadoc) {
    options.encoding = 'UTF-8'
}

def otherProject = project(':Algorithm')

    tasks.getByName('sniff'){
        project = otherProject
    }


println tasks.getByName('sniff').properties